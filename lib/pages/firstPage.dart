import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:test_local_notification1/constant.dart';
import 'package:test_local_notification1/component.dart';
import 'askar_Page.dart';
import 'package:hive_flutter/hive_flutter.dart';
import 'tsbeh_page.dart';
import 'package:percent_indicator/percent_indicator.dart';
import 'package:workmanager/workmanager.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:test_local_notification1/notification_service.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:test_local_notification1/main.dart';
import 'package:intl/intl.dart';
import 'package:arabic_numbers/arabic_numbers.dart';

// Future showNotification() async {
//   FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
//       FlutterLocalNotificationsPlugin();
//   int rndmIndex = Random().nextInt(StaticVars().smallDo3a2.length - 1);
//
//   AndroidNotificationDetails androidPlatformChannelSpecifics =
//       AndroidNotificationDetails(
//     '$rndmIndex.0',
//     'تطبيق المسلم',
//     'تطبيق اذكار وادعية وتلاوة وقراءة القرءان الكريم',
//     importance: Importance.max,
//     priority: Priority.high,
//     playSound: true,
//     enableVibration: true,
//   );
//   var iOSPlatformChannelSpecifics = IOSNotificationDetails(
//     threadIdentifier: 'thread_id',
//   );
//   var platformChannelSpecifics = NotificationDetails(
//       android: androidPlatformChannelSpecifics,
//       iOS: iOSPlatformChannelSpecifics);
//
//   await flutterLocalNotificationsPlugin.show(
//     rndmIndex,
//     'فَذَكِّرْ',
//     StaticVars().smallDo3a2[rndmIndex],
//     platformChannelSpecifics,
//   );
//
//   /// periodically...but const id && const title,body
//   /*await flutterLocalNotificationsPlugin.periodicallyShow(
//     Random().nextInt(azkar.length-1),
//     'السلام عليكم',
//     azkar[Random().nextInt(azkar.length-1)],
//     RepeatInterval.everyMinute,
//     platformChannelSpecifics,
//     androidAllowWhileIdle: true,
//     payload: '',
//   );*/
// }
//
// void callbackDispatcher() async {
//   FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
//       FlutterLocalNotificationsPlugin();
//   // initial notifications
//   var initializationSettingsAndroid =
//       AndroidInitializationSettings('@mipmap/ic_launcher');
//   var initializationSettingsIOS = IOSInitializationSettings();
//
//   var initializationSettings = InitializationSettings(
//     android: initializationSettingsAndroid,
//     iOS: initializationSettingsIOS,
//   );
//
//   flutterLocalNotificationsPlugin = FlutterLocalNotificationsPlugin();
//
//   WidgetsFlutterBinding.ensureInitialized();
//
//   flutterLocalNotificationsPlugin.initialize(
//     initializationSettings,
//   );
//
//   Workmanager().executeTask((task, inputData) async {
//     await showNotification();
//     return Future.value(true);
//   });
// }

bool apper = true;
bool disapper = false;

class FirstPage extends StatefulWidget {
  @override
  State<FirstPage> createState() => _FirstPageState();
}

class _FirstPageState extends State<FirstPage> with TickerProviderStateMixin {
  late ScrollController _controller;
  late AnimationController _animationController;

  late Animation<double> _clickAnimation;
  late AnimationController _cLickController;
  double num = 0;

  String message = '';
  List<List<String>> listOfSkr = [
    [
      'اللهُ أَكْبَرُ',
      'سُبْحَانَ اللهِ',
      'الْحَمْدُ لِلَّهُِ',
    ],
    [
      'سُبْحَانَ اللهِ',
      'الْحَمْدُ لِلَّهُِ',
      'أَسْتَغْفِرُ اللَّهَ',
    ],
    [
      'الْحَمْدُ لِلَّهُِ',
      'أَسْتَغْفِرُ اللَّهَ',
      'لَا إِلَهَ إِلَّا اللهُُِ',
    ],
    [
      'أَسْتَغْفِرُ اللَّهَ',
      'لَا إِلَهَ إِلَّا اللهُُِ',
      'اللهُ أَكْبَرُ',
    ]
  ];

  late List<String> list;
  late String text;
  int listNum = 0;

  _scrollListener() {
    setState(() {
      int height = _controller.offset.toInt();
      if (height <= 180 &&
          _controller.position.userScrollDirection == ScrollDirection.forward) {
        apper = true;
      } else if (height >= 108 &&
          _controller.position.userScrollDirection == ScrollDirection.reverse) {
        apper = false;
      }
    });
  }

  @override
  void initState() {
    // Workmanager().initialize(callbackDispatcher, isInDebugMode: true);
    //
    // Workmanager().registerPeriodicTask(
    //   "1",
    //   "periodic Notification",
    //   frequency: Duration(minutes: 15),
    // );
    //
    // Workmanager().registerPeriodicTask(
    //   "2",
    //   "periodic Notification at day",
    //   frequency: Duration(days: 1),
    // );

    // FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
    //     FlutterLocalNotificationsPlugin();
    // // initial notifications
    // var initializationSettingsAndroid =
    //     AndroidInitializationSettings('@mipmap/ic_launcher');
    // var initializationSettingsIOS = DarwinInitializationSettings();
    //
    // var initializationSettings = InitializationSettings(
    //   android: initializationSettingsAndroid,
    //   iOS: initializationSettingsIOS,
    // );
    //
    // flutterLocalNotificationsPlugin = FlutterLocalNotificationsPlugin();
    //
    // WidgetsFlutterBinding.ensureInitialized();
    //
    // flutterLocalNotificationsPlugin.initialize(
    //   initializationSettings,
    // );
    _controller = ScrollController();
    _controller.addListener(_scrollListener);
    _cLickController =
        AnimationController(duration: const Duration(seconds: 0), vsync: this);
    _clickAnimation =
        Tween<double>(begin: 135, end: 135).animate(_cLickController);

    setState(() {
      list = listOfSkr[listNum];
      text = list[0];
    });
    super.initState();
  }

  void animate() {
    _cLickController = AnimationController(
        duration: const Duration(milliseconds: 500), vsync: this);
    _clickAnimation =
        Tween<double>(begin: 120, end: 135).animate(_cLickController)
          ..addListener(() {
            setState(() {
              _clickAnimation.value;
            });
          });
    _cLickController.forward();
  }

  Color bgColor1 = Colors.white;
  Color textColor1 = Colors.purple;

  Color bgColor2 = Colors.white;
  Color textColor2 = Colors.blueAccent;
  Color currentColor = Color(0xfff65b97);
  int test = 0;
  @override
  Widget build(BuildContext context) {
    if (num == 1) {
      Future.delayed(Duration(milliseconds: 300), () {
        setState(() {
          num = 0;
        });
      });
    }

    return ListView(
      controller: _controller,
      children: [
        Stack(
          clipBehavior: Clip.none,
          alignment: Alignment.topCenter,
          children: [
            AnimatedOpacity(
              opacity: apper ? 1.0 : 0.0,
              duration: Duration(seconds: 1),
              child: bellowNavBar(),
            ),
            Column(
              children: [
                SizedBox(
                  height: 225,
                ),
                Container(
                  height: 190.0,
                  width: 375.0,
                  padding:
                      EdgeInsets.symmetric(vertical: 10.0, horizontal: 10.0),
                  decoration: BoxDecoration(
                    boxShadow: [BoxShadow(blurRadius: 1, color: Colors.grey)],
                    color: Colors.white,
                    borderRadius: BorderRadius.all(
                      Radius.circular(20),
                    ),
                  ),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Row(
                        children: [
                          Icon(
                            Icons.sunny,
                            color: Colors.yellow,
                            size: 130.0,
                          ),
                          SizedBox(
                            width: 10,
                          ),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.end,
                            children: [
                              CustomText(
                                'السلام عليكم',
                                38.0,
                                Color(0xFF76d668),
                              ),
                              Text(
                                'اللهم تقبل منا',
                                style: TextStyle(
                                  color: Color(0xFF808080),
                                  fontSize: 25.0,
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                      GestureDetector(
                        onTap: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => AskarPage(
                                'أذكارالصباح ',
                                Hive.box('askar_morning_text'),
                                Hive.box('askar_morning_repet'),
                                [
                                  '  اللَّهُ لَا إِلَٰهَ إِلَّا هُوَ الْحَيُّ الْقَيُّومُ ۚ لَا تَأْخُذُهُ سِنَةٌ وَلَا نَوْمٌ ۚ لَهُ مَا فِي السَّمَاوَاتِ وَمَا فِي الْأَرْضِ ۗ مَنْ ذَا الَّذِي يَشْفَعُ عِنْدَهُ إِلَّا بِإِذْنِهِ ۚ يَعْلَمُ مَا بَيْنَ أَيْدِيهِمْ وَمَا خَلْفَهُمْ ۖ وَلَا يُحِيطُونَ بِشَيْءٍ مِنْ عِلْمِهِ إِلَّا بِمَا شَاءَ ۚ وَسِعَ كُرْسِيُّهُ السَّمَاوَاتِ وَالْأَرْضَ ۖ وَلَا يَئُودُهُ حِفْظُهُمَا ۚ وَهُوَ الْعَلِيُّ الْعَظِيمُ',
                                  'قُلْ هُوَ ٱللَّهُ أَحَدٌ، ٱللَّهُ ٱلصَّمَدُ، لَمْ يَلِدْ وَلَمْ يُولَدْ، وَلَمْ يَكُن لَّهُۥ كُفُوًا أَحَدٌۢ',
                                  'قُلْ أَعُوذُ بِرَبِّ ٱلْفَلَقِ، مِن شَرِّ مَا خَلَقَ، وَمِن شَرِّ غَاسِقٍ إِذَا وَقَبَ، وَمِن شَرِّ ٱلنَّفَّٰثَٰتِ فِى ٱلْعُقَدِ، وَمِن شَرِّ حَاسِدٍ إِذَا حَسَدَ',
                                  'قُلْ أَعُوذُ بِرَبِّ ٱلنَّاسِ، مَلِكِ ٱلنَّاسِ، إِلَٰهِ ٱلنَّاسِ، مِن شَرِّ ٱلْوَسْوَاسِ ٱلْخَنَّاسِ، ٱلَّذِى يُوَسْوِسُ فِى صُدُورِ ٱلنَّاسِ، مِنَ ٱلْجِنَّةِ وَٱلنَّاسِ',
                                  'أَصْـبَحْنا وَأَصْـبَحَ المُـلْكُ لله وَالحَمدُ لله ، لا إلهَ إلاّ اللّهُ وَحدَهُ لا شَريكَ لهُ، لهُ المُـلكُ ولهُ الحَمْـد، وهُوَ على كلّ شَيءٍ قدير ، رَبِّ أسْـأَلُـكَ خَـيرَ ما في هـذا اليوم وَخَـيرَ ما بَعْـدَه ، وَأَعـوذُ بِكَ مِنْ شَـرِّ ما في هـذا اليوم وَشَرِّ ما بَعْـدَه، رَبِّ أَعـوذُبِكَ مِنَ الْكَسَـلِ وَسـوءِ الْكِـبَر ، رَبِّ أَعـوذُ بِكَ مِنْ عَـذابٍ في النّـارِ وَعَـذابٍ في القَـبْر',
                                  'اللّهـمَّ أَنْتَ رَبِّـي لا إلهَ إلاّ أَنْتَ ، خَلَقْتَنـي وَأَنا عَبْـدُك ، وَأَنا عَلـى عَهْـدِكَ وَوَعْـدِكَ ما اسْتَـطَعْـت ، أَعـوذُبِكَ مِنْ شَـرِّ ما صَنَـعْت ، أَبـوءُ لَـكَ بِنِعْـمَتِـكَ عَلَـيَّ وَأَبـوءُ بِذَنْـبي فَاغْفـِرْ لي فَإِنَّـهُ لا يَغْـفِرُ الذُّنـوبَ إِلاّ أَنْتَ',
                                  'رَضيـتُ بِاللهِ رَبَّـاً وَبِالإسْلامِ ديـناً وَبِمُحَـمَّدٍ صلى الله عليه وسلم نَبِيّـاً',
                                  'اللّهُـمَّ إِنِّـي أَصْبَـحْتُ أُشْـهِدُك ، وَأُشْـهِدُ حَمَلَـةَ عَـرْشِـك ، وَمَلَائِكَتَكَ ، وَجَمـيعَ خَلْـقِك ، أَنَّـكَ أَنْـتَ اللهُ لا إلهَ إلاّ أَنْـتَ وَحْـدَكَ لا شَريكَ لَـك ، وَأَنَّ ُ مُحَمّـداً عَبْـدُكَ وَرَسـولُـك',
                                  'اللّهُـمَّ ما أَصْبَـَحَ بي مِـنْ نِعْـمَةٍ أَو بِأَحَـدٍ مِـنْ خَلْـقِك ، فَمِـنْكَ وَحْـدَكَ لا شريكَ لَـك ، فَلَـكَ الْحَمْـدُ وَلَـكَ الشُّكْـر',
                                  'حَسْبِـيَ اللّهُ لا إلهَ إلاّ هُوَ عَلَـيهِ تَوَكَّـلتُ وَهُوَ رَبُّ العَرْشِ العَظـيم',
                                  'بِسـمِ اللهِ الذي لا يَضُـرُّ مَعَ اسمِـهِ شَيءٌ في الأرْضِ وَلا في السّمـاءِ وَهـوَ السّمـيعُ العَلـيم',
                                  'اللّهُـمَّ بِكَ أَصْـبَحْنا وَبِكَ أَمْسَـينا ، وَبِكَ نَحْـيا وَبِكَ نَمُـوتُ وَإِلَـيْكَ النُّـشُور',
                                  'أَصْبَـحْـنا عَلَى فِطْرَةِ الإسْلاَمِ، وَعَلَى كَلِمَةِ الإِخْلاَصِ، وَعَلَى دِينِ نَبِيِّنَا مُحَمَّدٍ صَلَّى اللهُ عَلَيْهِ وَسَلَّمَ، وَعَلَى مِلَّةِ أَبِينَا إبْرَاهِيمَ حَنِيفاً مُسْلِماً وَمَا كَانَ مِنَ المُشْرِكِينَ',
                                  'سُبْحـانَ اللهِ وَبِحَمْـدِهِ عَدَدَ خَلْـقِه ، وَرِضـا نَفْسِـه ، وَزِنَـةَ عَـرْشِـه ، وَمِـدادَ كَلِمـاتِـه',
                                  'اللّهُـمَّ عافِـني في بَدَنـي ، اللّهُـمَّ عافِـني في سَمْـعي ، اللّهُـمَّ عافِـني في بَصَـري ، لا إلهَ إلاّ أَنْـتَ',
                                  'اللّهُـمَّ إِنّـي أَعـوذُ بِكَ مِنَ الْكُـفر ، وَالفَـقْر ، وَأَعـوذُ بِكَ مِنْ عَذابِ القَـبْر ، لا إلهَ إلاّ أَنْـتَ',
                                  'اللّهُـمَّ إِنِّـي أسْـأَلُـكَ العَـفْوَ وَالعـافِـيةَ في الدُّنْـيا وَالآخِـرَة ، اللّهُـمَّ إِنِّـي أسْـأَلُـكَ العَـفْوَ وَالعـافِـيةَ في ديني وَدُنْـيايَ وَأهْـلي وَمالـي ، اللّهُـمَّ اسْتُـرْ عـوْراتي وَآمِـنْ رَوْعاتـي ، اللّهُـمَّ احْفَظْـني مِن بَـينِ يَدَيَّ وَمِن خَلْفـي وَعَن يَمـيني وَعَن شِمـالي ، وَمِن فَوْقـي ، وَأَعـوذُ بِعَظَمَـتِكَ أَن أُغْـتالَ مِن تَحْتـي',
                                  'يَا حَيُّ يَا قيُّومُ بِرَحْمَتِكَ أسْتَغِيثُ أصْلِحْ لِي شَأنِي كُلَّهُ وَلاَ تَكِلْنِي إلَى نَفْسِي طَـرْفَةَ عَيْنٍ',
                                  'أَصْبَـحْـنا وَأَصْبَـحْ المُـلكُ للهِ رَبِّ العـالَمـين ، اللّهُـمَّ إِنِّـي أسْـأَلُـكَ خَـيْرَ هـذا الـيَوْم ، فَـتْحَهُ ، وَنَصْـرَهُ ، وَنـورَهُ وَبَـرَكَتَـهُ ، وَهُـداهُ ، وَأَعـوذُ بِـكَ مِـنْ شَـرِّ ما فـيهِ وَشَـرِّ ما بَعْـدَه',
                                  'اللّهُـمَّ عالِـمَ الغَـيْبِ وَالشّـهادَةِ فاطِـرَ السّماواتِ وَالأرْضِ رَبَّ كـلِّ شَـيءٍ وَمَليـكَه ، أَشْهَـدُ أَنْ لا إِلـهَ إِلاّ أَنْت ، أَعـوذُ بِكَ مِن شَـرِّ نَفْسـي وَمِن شَـرِّ الشَّيْـطانِ وَشِرْكِهِ ، وَأَنْ أَقْتَـرِفَ عَلـى نَفْسـي سوءاً أَوْ أَجُـرَّهُ إِلـى مُسْـلِم',
                                  'أَعـوذُ بِكَلِمـاتِ اللّهِ التّـامّـاتِ مِنْ شَـرِّ ما خَلَـق',
                                  'اللَّهُمَّ صَلِّ وَسَلِّمْ وَبَارِكْ على نَبِيِّنَا مُحمَّد',
                                  'اللَّهُمَّ إِنَّا نَعُوذُ بِكَ مِنْ أَنْ نُشْرِكَ بِكَ شَيْئًا نَعْلَمُهُ ، وَنَسْتَغْفِرُكَ لِمَا لَا نَعْلَمُهُ',
                                  'اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنْ الْهَمِّ وَالْحَزَنِ، وَأَعُوذُ بِكَ مِنْ الْعَجْزِ وَالْكَسَلِ، وَأَعُوذُ بِكَ مِنْ الْجُبْنِ وَالْبُخْلِ، وَأَعُوذُ بِكَ مِنْ غَلَبَةِ الدَّيْنِ، وَقَهْرِ الرِّجَالِ',
                                  'أسْتَغْفِرُ اللهَ العَظِيمَ الَّذِي لاَ إلَهَ إلاَّ هُوَ، الحَيُّ القَيُّومُ، وَأتُوبُ إلَيهِ',
                                  'يَا رَبِّ , لَكَ الْحَمْدُ كَمَا يَنْبَغِي لِجَلَالِ وَجْهِكَ , وَلِعَظِيمِ سُلْطَانِكَ',
                                  'اللَّهُمَّ إِنِّي أَسْأَلُكَ عِلْمًا نَافِعًا، وَرِزْقًا طَيِّبًا، وَعَمَلًا مُتَقَبَّلًا',
                                  'اللَّهُمَّ أَنْتَ رَبِّي لا إِلَهَ إِلا أَنْتَ ، عَلَيْكَ تَوَكَّلْتُ ، وَأَنْتَ رَبُّ الْعَرْشِ الْعَظِيمِ , مَا شَاءَ اللَّهُ كَانَ ، وَمَا لَمْ يَشَأْ لَمْ يَكُنْ ، وَلا حَوْلَ وَلا قُوَّةَ إِلا بِاللَّهِ الْعَلِيِّ الْعَظِيمِ , أَعْلَمُ أَنَّ اللَّهَ عَلَى كُلِّ شَيْءٍ قَدِيرٌ ، وَأَنَّ اللَّهَ قَدْ أَحَاطَ بِكُلِّ شَيْءٍ عِلْمًا , اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنْ شَرِّ نَفْسِي ، وَمِنْ شَرِّ كُلِّ دَابَّةٍ أَنْتَ آخِذٌ بِنَاصِيَتِهَا ، إِنَّ رَبِّي عَلَى صِرَاطٍ مُسْتَقِيمٍ',
                                  'لَا إلَه إلّا اللهُ وَحْدَهُ لَا شَرِيكَ لَهُ، لَهُ الْمُلْكُ وَلَهُ الْحَمْدُ وَهُوَ عَلَى كُلِّ شَيْءِ قَدِيرِ',
                                  'سُبْحـانَ اللهِ وَبِحَمْـدِه',
                                  'أسْتَغْفِرُ اللهَ وَأتُوبُ إلَيْهِ'
                                ],
                                [
                                  1,
                                  3,
                                  3,
                                  3,
                                  1,
                                  1,
                                  3,
                                  4,
                                  1,
                                  7,
                                  3,
                                  1,
                                  1,
                                  3,
                                  3,
                                  3,
                                  1,
                                  3,
                                  1,
                                  1,
                                  3,
                                  10,
                                  3,
                                  3,
                                  3,
                                  3,
                                  1,
                                  1,
                                  100,
                                  100,
                                  100
                                ],
                              ),
                            ),
                          );
                        },
                        child: Icon(
                          Icons.arrow_circle_left_rounded,
                          color: Color(0xFF76d668),
                          size: 35.0,
                        ),
                      ),
                    ],
                  ),
                ),
                Column(
                  children: [
                    SizedBox(
                      height: 40.0,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Expanded(
                          child: GestureDetector(
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (context) => AskarPage(
                                    'أذكارالصباح ',
                                    Hive.box('askar_morning_text'),
                                    Hive.box('askar_morning_repet'),
                                    [
                                      '  اللَّهُ لَا إِلَٰهَ إِلَّا هُوَ الْحَيُّ الْقَيُّومُ ۚ لَا تَأْخُذُهُ سِنَةٌ وَلَا نَوْمٌ ۚ لَهُ مَا فِي السَّمَاوَاتِ وَمَا فِي الْأَرْضِ ۗ مَنْ ذَا الَّذِي يَشْفَعُ عِنْدَهُ إِلَّا بِإِذْنِهِ ۚ يَعْلَمُ مَا بَيْنَ أَيْدِيهِمْ وَمَا خَلْفَهُمْ ۖ وَلَا يُحِيطُونَ بِشَيْءٍ مِنْ عِلْمِهِ إِلَّا بِمَا شَاءَ ۚ وَسِعَ كُرْسِيُّهُ السَّمَاوَاتِ وَالْأَرْضَ ۖ وَلَا يَئُودُهُ حِفْظُهُمَا ۚ وَهُوَ الْعَلِيُّ الْعَظِيمُ',
                                      'قُلْ هُوَ ٱللَّهُ أَحَدٌ، ٱللَّهُ ٱلصَّمَدُ، لَمْ يَلِدْ وَلَمْ يُولَدْ، وَلَمْ يَكُن لَّهُۥ كُفُوًا أَحَدٌۢ',
                                      'قُلْ أَعُوذُ بِرَبِّ ٱلْفَلَقِ، مِن شَرِّ مَا خَلَقَ، وَمِن شَرِّ غَاسِقٍ إِذَا وَقَبَ، وَمِن شَرِّ ٱلنَّفَّٰثَٰتِ فِى ٱلْعُقَدِ، وَمِن شَرِّ حَاسِدٍ إِذَا حَسَدَ',
                                      'قُلْ أَعُوذُ بِرَبِّ ٱلنَّاسِ، مَلِكِ ٱلنَّاسِ، إِلَٰهِ ٱلنَّاسِ، مِن شَرِّ ٱلْوَسْوَاسِ ٱلْخَنَّاسِ، ٱلَّذِى يُوَسْوِسُ فِى صُدُورِ ٱلنَّاسِ، مِنَ ٱلْجِنَّةِ وَٱلنَّاسِ',
                                      'أَصْـبَحْنا وَأَصْـبَحَ المُـلْكُ لله وَالحَمدُ لله ، لا إلهَ إلاّ اللّهُ وَحدَهُ لا شَريكَ لهُ، لهُ المُـلكُ ولهُ الحَمْـد، وهُوَ على كلّ شَيءٍ قدير ، رَبِّ أسْـأَلُـكَ خَـيرَ ما في هـذا اليوم وَخَـيرَ ما بَعْـدَه ، وَأَعـوذُ بِكَ مِنْ شَـرِّ ما في هـذا اليوم وَشَرِّ ما بَعْـدَه، رَبِّ أَعـوذُبِكَ مِنَ الْكَسَـلِ وَسـوءِ الْكِـبَر ، رَبِّ أَعـوذُ بِكَ مِنْ عَـذابٍ في النّـارِ وَعَـذابٍ في القَـبْر',
                                      'اللّهـمَّ أَنْتَ رَبِّـي لا إلهَ إلاّ أَنْتَ ، خَلَقْتَنـي وَأَنا عَبْـدُك ، وَأَنا عَلـى عَهْـدِكَ وَوَعْـدِكَ ما اسْتَـطَعْـت ، أَعـوذُبِكَ مِنْ شَـرِّ ما صَنَـعْت ، أَبـوءُ لَـكَ بِنِعْـمَتِـكَ عَلَـيَّ وَأَبـوءُ بِذَنْـبي فَاغْفـِرْ لي فَإِنَّـهُ لا يَغْـفِرُ الذُّنـوبَ إِلاّ أَنْتَ',
                                      'رَضيـتُ بِاللهِ رَبَّـاً وَبِالإسْلامِ ديـناً وَبِمُحَـمَّدٍ صلى الله عليه وسلم نَبِيّـاً',
                                      'اللّهُـمَّ إِنِّـي أَصْبَـحْتُ أُشْـهِدُك ، وَأُشْـهِدُ حَمَلَـةَ عَـرْشِـك ، وَمَلَائِكَتَكَ ، وَجَمـيعَ خَلْـقِك ، أَنَّـكَ أَنْـتَ اللهُ لا إلهَ إلاّ أَنْـتَ وَحْـدَكَ لا شَريكَ لَـك ، وَأَنَّ ُ مُحَمّـداً عَبْـدُكَ وَرَسـولُـك',
                                      'اللّهُـمَّ ما أَصْبَـَحَ بي مِـنْ نِعْـمَةٍ أَو بِأَحَـدٍ مِـنْ خَلْـقِك ، فَمِـنْكَ وَحْـدَكَ لا شريكَ لَـك ، فَلَـكَ الْحَمْـدُ وَلَـكَ الشُّكْـر',
                                      'حَسْبِـيَ اللّهُ لا إلهَ إلاّ هُوَ عَلَـيهِ تَوَكَّـلتُ وَهُوَ رَبُّ العَرْشِ العَظـيم',
                                      'بِسـمِ اللهِ الذي لا يَضُـرُّ مَعَ اسمِـهِ شَيءٌ في الأرْضِ وَلا في السّمـاءِ وَهـوَ السّمـيعُ العَلـيم',
                                      'اللّهُـمَّ بِكَ أَصْـبَحْنا وَبِكَ أَمْسَـينا ، وَبِكَ نَحْـيا وَبِكَ نَمُـوتُ وَإِلَـيْكَ النُّـشُور',
                                      'أَصْبَـحْـنا عَلَى فِطْرَةِ الإسْلاَمِ، وَعَلَى كَلِمَةِ الإِخْلاَصِ، وَعَلَى دِينِ نَبِيِّنَا مُحَمَّدٍ صَلَّى اللهُ عَلَيْهِ وَسَلَّمَ، وَعَلَى مِلَّةِ أَبِينَا إبْرَاهِيمَ حَنِيفاً مُسْلِماً وَمَا كَانَ مِنَ المُشْرِكِينَ',
                                      'سُبْحـانَ اللهِ وَبِحَمْـدِهِ عَدَدَ خَلْـقِه ، وَرِضـا نَفْسِـه ، وَزِنَـةَ عَـرْشِـه ، وَمِـدادَ كَلِمـاتِـه',
                                      'اللّهُـمَّ عافِـني في بَدَنـي ، اللّهُـمَّ عافِـني في سَمْـعي ، اللّهُـمَّ عافِـني في بَصَـري ، لا إلهَ إلاّ أَنْـتَ',
                                      'اللّهُـمَّ إِنّـي أَعـوذُ بِكَ مِنَ الْكُـفر ، وَالفَـقْر ، وَأَعـوذُ بِكَ مِنْ عَذابِ القَـبْر ، لا إلهَ إلاّ أَنْـتَ',
                                      'اللّهُـمَّ إِنِّـي أسْـأَلُـكَ العَـفْوَ وَالعـافِـيةَ في الدُّنْـيا وَالآخِـرَة ، اللّهُـمَّ إِنِّـي أسْـأَلُـكَ العَـفْوَ وَالعـافِـيةَ في ديني وَدُنْـيايَ وَأهْـلي وَمالـي ، اللّهُـمَّ اسْتُـرْ عـوْراتي وَآمِـنْ رَوْعاتـي ، اللّهُـمَّ احْفَظْـني مِن بَـينِ يَدَيَّ وَمِن خَلْفـي وَعَن يَمـيني وَعَن شِمـالي ، وَمِن فَوْقـي ، وَأَعـوذُ بِعَظَمَـتِكَ أَن أُغْـتالَ مِن تَحْتـي',
                                      'يَا حَيُّ يَا قيُّومُ بِرَحْمَتِكَ أسْتَغِيثُ أصْلِحْ لِي شَأنِي كُلَّهُ وَلاَ تَكِلْنِي إلَى نَفْسِي طَـرْفَةَ عَيْنٍ',
                                      'أَصْبَـحْـنا وَأَصْبَـحْ المُـلكُ للهِ رَبِّ العـالَمـين ، اللّهُـمَّ إِنِّـي أسْـأَلُـكَ خَـيْرَ هـذا الـيَوْم ، فَـتْحَهُ ، وَنَصْـرَهُ ، وَنـورَهُ وَبَـرَكَتَـهُ ، وَهُـداهُ ، وَأَعـوذُ بِـكَ مِـنْ شَـرِّ ما فـيهِ وَشَـرِّ ما بَعْـدَه',
                                      'اللّهُـمَّ عالِـمَ الغَـيْبِ وَالشّـهادَةِ فاطِـرَ السّماواتِ وَالأرْضِ رَبَّ كـلِّ شَـيءٍ وَمَليـكَه ، أَشْهَـدُ أَنْ لا إِلـهَ إِلاّ أَنْت ، أَعـوذُ بِكَ مِن شَـرِّ نَفْسـي وَمِن شَـرِّ الشَّيْـطانِ وَشِرْكِهِ ، وَأَنْ أَقْتَـرِفَ عَلـى نَفْسـي سوءاً أَوْ أَجُـرَّهُ إِلـى مُسْـلِم',
                                      'أَعـوذُ بِكَلِمـاتِ اللّهِ التّـامّـاتِ مِنْ شَـرِّ ما خَلَـق',
                                      'اللَّهُمَّ صَلِّ وَسَلِّمْ وَبَارِكْ على نَبِيِّنَا مُحمَّد',
                                      'اللَّهُمَّ إِنَّا نَعُوذُ بِكَ مِنْ أَنْ نُشْرِكَ بِكَ شَيْئًا نَعْلَمُهُ ، وَنَسْتَغْفِرُكَ لِمَا لَا نَعْلَمُهُ',
                                      'اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنْ الْهَمِّ وَالْحَزَنِ، وَأَعُوذُ بِكَ مِنْ الْعَجْزِ وَالْكَسَلِ، وَأَعُوذُ بِكَ مِنْ الْجُبْنِ وَالْبُخْلِ، وَأَعُوذُ بِكَ مِنْ غَلَبَةِ الدَّيْنِ، وَقَهْرِ الرِّجَالِ',
                                      'أسْتَغْفِرُ اللهَ العَظِيمَ الَّذِي لاَ إلَهَ إلاَّ هُوَ، الحَيُّ القَيُّومُ، وَأتُوبُ إلَيهِ',
                                      'يَا رَبِّ , لَكَ الْحَمْدُ كَمَا يَنْبَغِي لِجَلَالِ وَجْهِكَ , وَلِعَظِيمِ سُلْطَانِكَ',
                                      'اللَّهُمَّ إِنِّي أَسْأَلُكَ عِلْمًا نَافِعًا، وَرِزْقًا طَيِّبًا، وَعَمَلًا مُتَقَبَّلًا',
                                      'اللَّهُمَّ أَنْتَ رَبِّي لا إِلَهَ إِلا أَنْتَ ، عَلَيْكَ تَوَكَّلْتُ ، وَأَنْتَ رَبُّ الْعَرْشِ الْعَظِيمِ , مَا شَاءَ اللَّهُ كَانَ ، وَمَا لَمْ يَشَأْ لَمْ يَكُنْ ، وَلا حَوْلَ وَلا قُوَّةَ إِلا بِاللَّهِ الْعَلِيِّ الْعَظِيمِ , أَعْلَمُ أَنَّ اللَّهَ عَلَى كُلِّ شَيْءٍ قَدِيرٌ ، وَأَنَّ اللَّهَ قَدْ أَحَاطَ بِكُلِّ شَيْءٍ عِلْمًا , اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنْ شَرِّ نَفْسِي ، وَمِنْ شَرِّ كُلِّ دَابَّةٍ أَنْتَ آخِذٌ بِنَاصِيَتِهَا ، إِنَّ رَبِّي عَلَى صِرَاطٍ مُسْتَقِيمٍ',
                                      'لَا إلَه إلّا اللهُ وَحْدَهُ لَا شَرِيكَ لَهُ، لَهُ الْمُلْكُ وَلَهُ الْحَمْدُ وَهُوَ عَلَى كُلِّ شَيْءِ قَدِيرِ',
                                      'سُبْحـانَ اللهِ وَبِحَمْـدِه',
                                      'أسْتَغْفِرُ اللهَ وَأتُوبُ إلَيْهِ'
                                    ],
                                    [
                                      1,
                                      3,
                                      3,
                                      3,
                                      1,
                                      1,
                                      3,
                                      4,
                                      1,
                                      7,
                                      3,
                                      1,
                                      1,
                                      3,
                                      3,
                                      3,
                                      1,
                                      3,
                                      1,
                                      1,
                                      3,
                                      10,
                                      3,
                                      3,
                                      3,
                                      3,
                                      1,
                                      1,
                                      100,
                                      100,
                                      100
                                    ],
                                  ),
                                ),
                              );
                            },
                            child: MiniCardHome(
                                'images/icons8-sun-48.png',
                                'ورد الصباح ',
                                Color(0xffffd179),
                                Color(0xfffebd3d)),
                          ),
                        ),
                        Expanded(
                          child: GestureDetector(
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (context) => AskarPage(
                                    'أذكارالمساء ',
                                    Hive.box('askar_night_text'),
                                    Hive.box('askar_night_repet'),
                                    [
                                      '  اللَّهُ لَا إِلَٰهَ إِلَّا هُوَ الْحَيُّ الْقَيُّومُ ۚ لَا تَأْخُذُهُ سِنَةٌ وَلَا نَوْمٌ ۚ لَهُ مَا فِي السَّمَاوَاتِ وَمَا فِي الْأَرْضِ ۗ مَنْ ذَا الَّذِي يَشْفَعُ عِنْدَهُ إِلَّا بِإِذْنِهِ ۚ يَعْلَمُ مَا بَيْنَ أَيْدِيهِمْ وَمَا خَلْفَهُمْ ۖ وَلَا يُحِيطُونَ بِشَيْءٍ مِنْ عِلْمِهِ إِلَّا بِمَا شَاءَ ۚ وَسِعَ كُرْسِيُّهُ السَّمَاوَاتِ وَالْأَرْضَ ۖ وَلَا يَئُودُهُ حِفْظُهُمَا ۚ وَهُوَ الْعَلِيُّ الْعَظِيمُ',
                                      'آمَنَ الرَّسُولُ بِمَا أُنْزِلَ إِلَيْهِ مِنْ رَبِّهِ وَالْمُؤْمِنُونَ ۚ كُلٌّ آمَنَ بِاللَّهِ وَمَلَائِكَتِهِ وَكُتُبِهِ وَرُسُلِهِ لَا نُفَرِّقُ بَيْنَ أَحَدٍ مِنْ رُسُلِهِ ۚ وَقَالُوا سَمِعْنَا وَأَطَعْنَا ۖ غُفْرَانَكَ رَبَّنَا وَإِلَيْكَ الْمَصِيرُ. لَا يُكَلِّفُ اللَّهُ نَفْسًا إِلَّا وُسْعَهَا لَهَا مَا كَسَبَتْ وَعَلَيْهَا مَا اكْتَسَبَتْ رَبَّنَا لَا تُؤَاخِذْنَا إِنْ نَّسِينَآ أَوْ أَخْطَأْنَا رَبَّنَا وَلَا تَحْمِلْ عَلَيْنَا إِصْرًا كَمَا حَمَلْتَهُ عَلَى الَّذِينَ مِنْ قَبْلِنَا رَبَّنَا وَلَا تُحَمِّلْنَا مَا لَا طَاقَةَ لَنَا بِهِ وَاعْفُ عَنَّا وَاغْفِرْ لَنَا وَارْحَمْنَا أَنْتَ مَوْلَانَا فَانْصُرْنَا عَلَى الْقَوْمِ الْكَافِرِينَ',
                                      'قُلْ هُوَ ٱللَّهُ أَحَدٌ، ٱللَّهُ ٱلصَّمَدُ، لَمْ يَلِدْ وَلَمْ يُولَدْ، وَلَمْ يَكُن لَّهُۥ كُفُوًا أَحَدٌۢ',
                                      'قُلْ أَعُوذُ بِرَبِّ ٱلْفَلَقِ، مِن شَرِّ مَا خَلَقَ، وَمِن شَرِّ غَاسِقٍ إِذَا وَقَبَ، وَمِن شَرِّ ٱلنَّفَّٰثَٰتِ فِى ٱلْعُقَدِ، وَمِن شَرِّ حَاسِدٍ إِذَا حَسَدَ',
                                      'قُلْ أَعُوذُ بِرَبِّ ٱلنَّاسِ، مَلِكِ ٱلنَّاسِ، إِلَٰهِ ٱلنَّاسِ، مِن شَرِّ ٱلْوَسْوَاسِ ٱلْخَنَّاسِ، ٱلَّذِى يُوَسْوِسُ فِى صُدُورِ ٱلنَّاسِ، مِنَ ٱلْجِنَّةِ وَٱلنَّاسِ',
                                      'أمسيـنا وأمسـى المـلك لله والحمد لله ، لا إله إلا الله وحده لا شريك له، له المـلك وله الحمـد، وهو على كل شيء قدير ، رب أسـألـك خـير ما في هـذه اللـيلة وخـير ما بعـدهـا ، وأعـوذ بك من شـر ما في هـذه اللـيلة وشر ما بعـدهـا ، رب أعـوذبك من الكسـل وسـوء الكـبر ، رب أعـوذ بك من عـذاب في النـار وعـذاب في القـبر',
                                      'اللهـم أنت ربـي لا إله إلا أنت ، خلقتنـي وأنا عبـدك ، وأنا علـى عهـدك ووعـدك ما استـطعـت ، أعـوذبك من شـر ما صنـعت ، أبـوء لـك بنعـمتـك علـي وأبـوء بذنـبي فاغفـر لي فإنـه لا يغـفر الذنـوب إلا أنت ',
                                      'رضيـت بالله ربـا وبالإسلام ديـنا وبمحـمد صلى الله عليه وسلم نبيـا',
                                      'اللهـم إنـي أمسيت أشـهدك ، وأشـهد حملـة عـرشـك ، وملائكتك ، وجمـيع خلـقك ، أنـك أنـت الله لا إله إلا أنـت وحـدك لا شريك لـك ، وأن محمـدا عبـدك ورسـولـك',
                                      'اللهـم ما أمسى بي مـن نعـمة أو بأحـد مـن خلـقك ، فمـنك وحـدك لا شريك لـك ، فلـك الحمـد ولـك الشكـر',
                                      'حسبـي الله لا إله إلا هو علـيه توكـلت وهو رب العرش العظـيم',
                                      'بسـم الله الذي لا يضـر مع اسمـه شيء في الأرض ولا في السمـاء وهـو السمـيع العلـيم',
                                      'اللهـم بك أمسـينا وبك أصـبحنا، وبك نحـيا وبك نمـوت وإلـيك المصير',
                                      'أمسينا على فطرة الإسلام، وعلى كلمة الإخلاص، وعلى دين نبينا محمد صلى الله عليه وسلم، وعلى ملة أبينا إبراهيم حنيفا مسلما وما كان من المشركين',
                                      'سبحـان الله وبحمـده عدد خلـقه ، ورضـا نفسـه ، وزنـة عـرشـه ، ومـداد كلمـاتـه',
                                      'اللهـم عافـني في بدنـي ، اللهـم عافـني في سمـعي ، اللهـم عافـني في بصـري ، لا إله إلا أنـت',
                                      'اللهـم إنـي أعـوذ بك من الكـفر ، والفـقر ، وأعـوذ بك من عذاب القـبر ، لا إله إلا أنـت',
                                      'اللهـم إنـي أسـألـك العـفو والعـافـية في الدنـيا والآخـرة ، اللهـم إنـي أسـألـك العـفو والعـافـية في ديني ودنـياي وأهـلي ومالـي ، اللهـم استـر عـوراتي وآمـن روعاتـي ، اللهـم احفظـني من بـين يدي ومن خلفـي وعن يمـيني وعن شمـالي ، ومن فوقـي ، وأعـوذ بعظمـتك أن أغـتال من تحتـي',
                                      'يا حي يا قيوم برحمتك أستغيث أصلح لي شأني كله ولا تكلني إلى نفسي طـرفة عين',
                                      'أمسينا وأمسى الملك لله رب العالمين، اللهم إني أسألك خير هذه الليلة فتحها ونصرها، ونورها وبركتها، وهداها، وأعوذ بك من شر ما فيها وشر ما بعدها',
                                      'اللهـم عالـم الغـيب والشـهادة فاطـر السماوات والأرض رب كـل شـيء ومليـكه ، أشهـد أن لا إلـه إلا أنت ، أعـوذ بك من شـر نفسـي ومن شـر الشيـطان وشركه ، وأن أقتـرف علـى نفسـي سوءا أو أجـره إلـى مسـلم',
                                      'أَعـوذُ بِكَلِمـاتِ اللّهِ التّـامّـاتِ مِنْ شَـرِّ ما خَلَـق',
                                      'اللهم صل وسلم وبارك على نبينا محمد',
                                      'اللهم إنا نعوذ بك من أن نشرك بك شيئا نعلمه ، ونستغفرك لما لا نعلمه',
                                      'اللهم إني أعوذ بك من الهم والحزن، وأعوذ بك من العجز والكسل، وأعوذ بك من الجبن والبخل، وأعوذ بك من غلبة الدين، وقهر الرجال',
                                      'أستغفر الله العظيم الذي لا إله إلا هو، الحي القيوم، وأتوب إليه',
                                      'يا رب , لك الحمد كما ينبغي لجلال وجهك , ولعظيم سلطانك',
                                      'اللهم إني أسألك علما نافعا، ورزقا طيبا، وعملا متقبلا',
                                      'اللهم أنت ربي لا إله إلا أنت ، عليك توكلت ، وأنت رب العرش العظيم , ما شاء الله كان ، وما لم يشأ لم يكن ، ولا حول ولا قوة إلا بالله العلي العظيم , أعلم أن الله على كل شيء قدير ، وأن الله قد أحاط بكل شيء علما , اللهم إني أعوذ بك من شر نفسي ، ومن شر كل دابة أنت آخذ بناصيتها ، إن ربي على صراط مستقيم',
                                      'لا إله إلا الله وحده لا شريك له، له الملك وله الحمد وهو على كل شيء قدير',
                                      'سُبْحـانَ اللهِ وَبِحَمْـدِهِ',
                                      'أسْتَغْفِرُ اللهَ وَأتُوبُ إلَيْهِ'
                                    ],
                                    [
                                      1,
                                      1,
                                      3,
                                      3,
                                      3,
                                      1,
                                      1,
                                      3,
                                      4,
                                      1,
                                      7,
                                      3,
                                      1,
                                      1,
                                      3,
                                      3,
                                      3,
                                      1,
                                      3,
                                      1,
                                      1,
                                      3,
                                      10,
                                      3,
                                      3,
                                      3,
                                      3,
                                      1,
                                      1,
                                      100,
                                      100,
                                      100,
                                    ],
                                  ),
                                ),
                              );
                            },
                            child: MiniCardHome(
                              'images/icons8-ramadan-32.png',
                              'ورد المساء ',
                              Color(0xffc8b4eb),
                              Color(0xff8964ce),
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Expanded(
                          child: GestureDetector(
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => Tsbeh()),
                              );
                            },
                            child: MiniCardHome(
                                'images/icons8-tasbih-66.png',
                                'تسبيح  ',
                                Color(0xff85abd6),
                                Color(0xff7aa7d8)),
                          ),
                        ),
                        Expanded(
                          child: GestureDetector(
                            onDoubleTap: () {
                              Noti.showNotification(
                                  id: 2,
                                  title: 'اذكار المساء',
                                  body: 'اذكار المساء',
                                  payload: 'اذكار المساء');
                            },
                            onTap: () {
                              Noti.showNotification(
                                  id: 1,
                                  title: 'اذكار الصباح',
                                  body: 'اذكار الصباح',
                                  payload: 'اذكار الصباح');

                              // Workmanager().registerOneOffTask(
                              //   "0",
                              //   "periodic1 Noti2fication",
                              // );
                            },
                            child: MiniCardHome(
                                'images/icons8-paint-50.png',
                                'تغير الشكل  ',
                                Color(0xff3ac8dc),
                                Color(0xff5494e3)),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
                Container(
                  height: 330,
                  width: double.infinity,
                  alignment: Alignment.bottomCenter,
                  margin: EdgeInsets.fromLTRB(18, 10, 18, 18),
                  decoration: BoxDecoration(
                      color: Color(0xFF76d668),
                      borderRadius: BorderRadius.all(Radius.circular(10)),
                      boxShadow: [kBoxShadow]),
                  child: Container(
                    height: 320,
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.all(
                        Radius.circular(10),
                      ),
                    ),
                    child: Column(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Padding(
                              padding: EdgeInsets.all(10),
                              child: GestureDetector(
                                onTap: () {
                                  setState(() {
                                    if (listNum == 0) {
                                      list = listOfSkr[1];
                                      listNum = 1;
                                    } else if (listNum == 1) {
                                      list = listOfSkr[2];
                                      listNum = 2;
                                    } else if (listNum == 2) {
                                      list = listOfSkr[3];
                                      listNum = 3;
                                    } else if (listNum == 3) {
                                      list = listOfSkr[0];
                                      listNum = 0;
                                    }
                                    bgColor1 = Colors.white;
                                    textColor1 = Colors.purple;
                                    bgColor2 = Colors.white;
                                    textColor2 = Colors.blueAccent;
                                    currentColor = Color(0xfff65b97);
                                    num = 0;
                                    text = list[0];
                                    test = 0;
                                  });
                                },
                                child: FaIcon(
                                  FontAwesomeIcons.sync,
                                  color: Colors.grey.shade400,
                                  size: 25,
                                ),
                              ),
                            ),
                            Padding(
                              padding: EdgeInsets.symmetric(
                                  vertical: 10, horizontal: 25),
                              child: Text(
                                'حلقة التسبيح',
                                style: TextStyle(
                                    color: Color(0xFF76d668),
                                    fontSize: 22,
                                    fontWeight: FontWeight.bold),
                              ),
                            ),
                          ],
                        ),
                        SizedBox(
                          height: 20,
                        ),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceAround,
                          children: [
                            Column(
                              children: [
                                SizedBox(
                                  height: 20,
                                ),
                                Container(
                                  height: 45,
                                  width: 110,
                                  alignment: Alignment.center,
                                  margin: EdgeInsets.only(bottom: 20),
                                  decoration: BoxDecoration(
                                      color: Color(0xfff65b97),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(50)),
                                      border: Border.all(
                                          color: Color(0xfff65b97), width: 1)),
                                  child: Text(
                                    list[0],
                                    style: TextStyle(
                                        fontSize: 18,
                                        fontWeight: FontWeight.bold,
                                        color: Colors.white),
                                  ),
                                ),
                                Container(
                                  height: 45,
                                  width: 110,
                                  margin: EdgeInsets.only(bottom: 20),
                                  alignment: Alignment.center,
                                  decoration: BoxDecoration(
                                      color: bgColor1,
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(50)),
                                      border: Border.all(
                                          color: Colors.purple, width: 1)),
                                  child: Text(
                                    list[1],
                                    style: TextStyle(
                                        fontSize: 18,
                                        fontWeight: FontWeight.bold,
                                        color: textColor1),
                                  ),
                                ),
                                Container(
                                  height: 45,
                                  width: 110,
                                  margin: EdgeInsets.only(bottom: 20),
                                  alignment: Alignment.center,
                                  decoration: BoxDecoration(
                                      color: bgColor2,
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(50)),
                                      border: Border.all(
                                          color: Colors.blueAccent, width: 1)),
                                  child: Text(
                                    list[2],
                                    style: TextStyle(
                                        fontSize: 18,
                                        fontWeight: FontWeight.bold,
                                        color: textColor2),
                                  ),
                                ),
                              ],
                            ),
                            Stack(
                              clipBehavior: Clip.none,
                              children: [
                                CircularPercentIndicator(
                                  animateFromLastPercent: true,
                                  animation: true,
                                  radius: 95,
                                  lineWidth: 12,
                                  percent: num,
                                  center: GestureDetector(
                                    onTap: () {
                                      test++;
                                      animate();
                                      setState(() {
                                        if (num != 1) {
                                          num = num + 1.0 / 3.0;
                                        }

                                        Future.delayed(
                                            Duration(milliseconds: 300), () {
                                          setState(() {
                                            if (test == 3) {
                                              bgColor1 = Colors.purple;
                                              textColor1 = Colors.white;

                                              text = list[1];
                                              currentColor = Colors.purple;
                                            } else if (test == 6) {
                                              bgColor2 = Colors.blueAccent;
                                              textColor2 = Colors.white;
                                              text = list[2];
                                              currentColor = Colors.blueAccent;
                                            } else if (test == 9) {
                                              bgColor1 = Colors.white;
                                              textColor1 = Colors.purple;
                                              bgColor2 = Colors.white;
                                              textColor2 = Colors.blueAccent;
                                              test = 0;
                                              text = list[0];
                                              currentColor = Color(0xfff65b97);
                                            }
                                          });
                                        });
                                      });
                                    },
                                    child: Container(
                                      height: _clickAnimation.value,
                                      width: _clickAnimation.value,
                                      decoration: BoxDecoration(
                                          borderRadius: BorderRadius.all(
                                              Radius.circular(300)),
                                          color: Colors.white,
                                          boxShadow: [
                                            BoxShadow(
                                              color:
                                                  Colors.grey.withOpacity(0.5),
                                              spreadRadius: 3,
                                              blurRadius: 10,
                                              offset: Offset(0,
                                                  6), // changes position of shadow
                                            )
                                          ]),
                                      child: Column(
                                        children: [
                                          SizedBox(
                                            height: 45,
                                          ),
                                          Text(
                                            text,
                                            style: TextStyle(
                                                fontSize: 23,
                                                fontWeight: FontWeight.bold,
                                                color: currentColor),
                                          )
                                        ],
                                      ),
                                    ),
                                  ),
                                  backgroundColor: Color(0xfff3f3f3),
                                  progressColor: currentColor,
                                ),
                                Positioned(
                                  top: -5,
                                  left: 80,
                                  child: Container(
                                    height: 20,
                                    width: 25,
                                    color: Colors.white,
                                  ),
                                ),
                                Positioned(
                                  bottom: 45,
                                  right: -8,
                                  child: RotationTransition(
                                    turns: AlwaysStoppedAnimation(25 / 360),
                                    child: Container(
                                      height: 20,
                                      width: 30,
                                      color: Colors.white,
                                    ),
                                  ),
                                ),
                                Positioned(
                                  bottom: 45,
                                  left: -8,
                                  child: RotationTransition(
                                    turns: AlwaysStoppedAnimation(335 / 360),
                                    child: Container(
                                      height: 20,
                                      width: 30,
                                      color: Colors.white,
                                    ),
                                  ),
                                )
                              ],
                            ),
                          ],
                        )
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ],
        ),
      ],
    );
  }
}

// class test extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     return ListView(
//       children: [
//         Stack(
//           clipBehavior: Clip.none,
//           alignment: Alignment.center,
//           children: [
//             bellowNavBar(),
//             Positioned(
//               top: 220.0,
//               child: Container(
//                 height: 180.0,
//                 width: 375.0,
//                 padding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 10.0),
//                 decoration: BoxDecoration(
//                   boxShadow: [kBoxShadow],
//                   color: Colors.white,
//                   borderRadius: BorderRadius.all(
//                     Radius.circular(20),
//                   ),
//                 ),
//                 child: Column(
//                   crossAxisAlignment: CrossAxisAlignment.end,
//                   children: [
//                     CustomText(
//                       'السلام عليكم',
//                       38.0,
//                       Color(0xFF76d668),
//                     ),
//                     Text(
//                       'اللهم تقبل منا',
//                       style: TextStyle(
//                         color: Color(0xFF808080),
//                         fontSize: 25.0,
//                       ),
//                     ),
//                   ],
//                 ),
//               ),
//             ),
//             Positioned(
//               left: 30.0,
//               top: 240,
//               child: Icon(
//                 Icons.sunny,
//                 color: Colors.yellow,
//                 size: 130.0,
//               ),
//             ),
//             Positioned(
//               left: 30.0,
//               top: 360,
//               child: GestureDetector(
//                 child: Icon(
//                   Icons.arrow_circle_left_rounded,
//                   color: Color(0xFF76d668),
//                   size: 35.0,
//                 ),
//               ),
//             ),
//           ],
//         ),
//         SizedBox(
//           height: 50.0,
//         ),
//         Column(
//           children: [
//             SizedBox(
//               height: 120.0,
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-sun-48.png', 'ورد الصباح ',
//                       Color(0xffffd179), Color(0xfffebd3d)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome(
//                     'images/icons8-ramadan-32.png',
//                     'ورد المساء ',
//                     Color(0xffc8b4eb),
//                     Color(0xff8964ce),
//                   ),
//                 ),
//               ],
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-tasbih-66.png', 'تسبيح  ',
//                       Color(0xff85abd6), Color(0xff7aa7d8)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome('images/icons8-paint-50.png',
//                       'تغير الشكل  ', Color(0xff3ac8dc), Color(0xff5494e3)),
//                 ),
//               ],
//             ),
//           ],
//         ),
//         Column(
//           children: [
//             SizedBox(
//               height: 120.0,
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-sun-48.png', 'ورد الصباح ',
//                       Color(0xffffd179), Color(0xfffebd3d)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome(
//                     'images/icons8-ramadan-32.png',
//                     'ورد المساء ',
//                     Color(0xffc8b4eb),
//                     Color(0xff8964ce),
//                   ),
//                 ),
//               ],
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-tasbih-66.png', 'تسبيح  ',
//                       Color(0xff85abd6), Color(0xff7aa7d8)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome('images/icons8-paint-50.png',
//                       'تغير الشكل  ', Color(0xff3ac8dc), Color(0xff5494e3)),
//                 ),
//               ],
//             ),
//           ],
//         ),
//         Column(
//           children: [
//             SizedBox(
//               height: 120.0,
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-sun-48.png', 'ورد الصباح ',
//                       Color(0xffffd179), Color(0xfffebd3d)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome(
//                     'images/icons8-ramadan-32.png',
//                     'ورد المساء ',
//                     Color(0xffc8b4eb),
//                     Color(0xff8964ce),
//                   ),
//                 ),
//               ],
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-tasbih-66.png', 'تسبيح  ',
//                       Color(0xff85abd6), Color(0xff7aa7d8)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome('images/icons8-paint-50.png',
//                       'تغير الشكل  ', Color(0xff3ac8dc), Color(0xff5494e3)),
//                 ),
//               ],
//             ),
//           ],
//         ),
//         Column(
//           children: [
//             SizedBox(
//               height: 120.0,
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-sun-48.png', 'ورد الصباح ',
//                       Color(0xffffd179), Color(0xfffebd3d)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome(
//                     'images/icons8-ramadan-32.png',
//                     'ورد المساء ',
//                     Color(0xffc8b4eb),
//                     Color(0xff8964ce),
//                   ),
//                 ),
//               ],
//             ),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               children: [
//                 Expanded(
//                   child: MiniCardHome('images/icons8-tasbih-66.png', 'تسبيح  ',
//                       Color(0xff85abd6), Color(0xff7aa7d8)),
//                 ),
//                 Expanded(
//                   child: MiniCardHome('images/icons8-paint-50.png',
//                       'تغير الشكل  ', Color(0xff3ac8dc), Color(0xff5494e3)),
//                 ),
//               ],
//             ),
//           ],
//         ),
//       ],
//     );
//   }
// }

class bellowNavBar extends StatefulWidget {
  @override
  State<bellowNavBar> createState() => _bellowNavBarState();
}

class _bellowNavBarState extends State<bellowNavBar> {
  String n = '';

  void changePressed(int number) async {
    final SharedPreferences prefs = await SharedPreferences.getInstance();
    // int? x = prefs.getInt('notiMinutes');
    setState(() {
      if (number == 1) {
        n = '1-3';
        s1 = true;
        s2 = s3 = s4 = false;
        prefs.setInt('notiMinutes', 480);
        prefs.setInt('theStateNum', 1);
      } else if (number == 2) {
        n = '5-10';
        s2 = true;
        s1 = s3 = s4 = false;
        prefs.setInt('notiMinutes', 144);
        prefs.setInt('theStateNum', 2);
      } else if (number == 3) {
        n = '11-17';
        s3 = true;
        s2 = s1 = s4 = false;

        prefs.setInt('notiMinutes', 84);
        prefs.setInt('theStateNum', 3);
      } else {
        n = '20';
        s4 = true;
        s2 = s3 = s1 = false;
        prefs.setInt('notiMinutes', 15);
        prefs.setInt('theStateNum', 4);
      }
    });
  }

  bool s1 = false;
  bool s2 = false;
  bool s3 = false;
  bool s4 = false;

  void intData() async {
    final SharedPreferences prefs = await SharedPreferences.getInstance();
    int? num = prefs.getInt('theStateNum');
    if (num != null) {
      setState(() {
        if (num == 1) {
          n = '1-3';
          s1 = true;
          s2 = s3 = s4 = false;
        } else if (num == 2) {
          n = '5-10';
          s2 = true;
          s1 = s3 = s4 = false;
        } else if (num == 3) {
          n = '11-17';
          s3 = true;
          s2 = s1 = s4 = false;
        } else {
          n = '20';
          s4 = true;
          s2 = s3 = s1 = false;
        }
      });
    } else {
      // first time
      changePressed(4);
      prefs.setInt('theStateNum', 4);
    }
  }

  @override
  void initState() {
    super.initState();
    if (mounted) {
      setState(() {
        intData();
      });
    }
  }

  Widget build(BuildContext context) {
    return Container(
      height: 310,
      alignment: Alignment.topRight,
      padding: EdgeInsets.only(right: 20.0, left: 20.0),
      color: Color(0xFF76d668),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.end,
        children: [
          CustomText('معدل ظهور الأذكار', 30.0, Colors.white),
          Container(
            child: Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                CustomText('يومياً ', 30.0, Colors.yellow),
                CustomText('$n', 25.0, Colors.yellow),
              ],
            ),
          ),
          Stack(
            alignment: Alignment.center,
            children: [
              Container(
                width: double.infinity,
                height: 50,
                decoration: BoxDecoration(
                  color: color,
                  borderRadius: BorderRadius.all(Radius.circular(20)),
                ),
              ),
              Container(
                child: Row(
                  children: [
                    Expanded(
                      child: NavButton(
                        () async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          bool shoNormalNoti =
                              prefs.getBool('shoNormalNoti') ?? true;
                          Workmanager().cancelAll();
                          changePressed(1);
                          if (shoNormalNoti) {
                            Workmanager().registerPeriodicTask(
                              "0480",
                              "periodic Notification",
                              frequency: Duration(minutes: 480),
                            );
                          } else {
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                duration: Duration(
                                    milliseconds:
                                        shoNormalNoti == true ? 500 : 1500),
                                backgroundColor: shoNormalNoti == true
                                    ? Color(0xFF76d668)
                                    : Colors.grey,
                                content: Text(
                                  textAlign: TextAlign.end,
                                  shoNormalNoti == true
                                      ? 'تم بنجاح '
                                      : 'يجب عليك تفعيل التنبيهات فى اعدادات التطبيق',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          }
                        },
                        BoxConstraints.tightFor(
                          width: s1 ? 60 : 50,
                          height: s1 ? 60 : 50,
                        ),
                        'نادر',
                        s1 ? Colors.yellow : Color(0xFF63b459),
                      ),
                    ),
                    Expanded(
                      child: NavButton(
                        () async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          bool shoNormalNoti =
                              prefs.getBool('shoNormalNoti') ?? true;
                          Workmanager().cancelAll();
                          changePressed(2);
                          if (shoNormalNoti) {
                            Workmanager().registerPeriodicTask(
                              "0144",
                              "periodic Notification",
                              frequency: Duration(minutes: 144),
                            );
                          } else {
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                duration: Duration(
                                    milliseconds:
                                        shoNormalNoti == true ? 500 : 1500),
                                backgroundColor: shoNormalNoti == true
                                    ? Color(0xFF76d668)
                                    : Colors.grey,
                                content: Text(
                                  textAlign: TextAlign.end,
                                  shoNormalNoti == true
                                      ? 'تم بنجاح '
                                      : 'يجب عليك تفعيل التنبيهات فى اعدادات التطبيق',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          }
                        },
                        BoxConstraints.tightFor(
                          width: s2 ? 60 : 50,
                          height: s2 ? 60 : 50,
                        ),
                        'منخفض',
                        s2 ? Colors.yellow : Color(0xFF63b459),
                      ),
                    ),
                    Expanded(
                      child: NavButton(
                        () async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          bool shoNormalNoti =
                              prefs.getBool('shoNormalNoti') ?? true;

                          Workmanager().cancelAll();
                          changePressed(3);
                          if (shoNormalNoti) {
                            Workmanager().registerPeriodicTask(
                              "084",
                              "periodic Notification",
                              frequency: Duration(minutes: 84),
                            );
                          } else {
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                duration: Duration(
                                    milliseconds:
                                        shoNormalNoti == true ? 500 : 1500),
                                backgroundColor: shoNormalNoti == true
                                    ? Color(0xFF76d668)
                                    : Colors.grey,
                                content: Text(
                                  textAlign: TextAlign.end,
                                  shoNormalNoti == true
                                      ? 'تم بنجاح '
                                      : 'يجب عليك تفعيل التنبيهات فى اعدادات التطبيق',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          }
                        },
                        BoxConstraints.tightFor(
                          width: s3 ? 60 : 50,
                          height: s3 ? 60 : 50,
                        ),
                        'متوسط',
                        s3 ? Colors.yellow : Color(0xFF63b459),
                      ),
                    ),
                    Expanded(
                      child: NavButton(
                        () async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          bool shoNormalNoti =
                              prefs.getBool('shoNormalNoti') ?? true;

                          Workmanager().cancelAll();
                          changePressed(4);
                          if (shoNormalNoti) {
                            Workmanager().registerPeriodicTask(
                              "015",
                              "periodic Notification",
                              frequency: Duration(minutes: 15),
                            );
                          } else {
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                duration: Duration(
                                    milliseconds:
                                        shoNormalNoti == true ? 500 : 1500),
                                backgroundColor: shoNormalNoti == true
                                    ? Color(0xFF76d668)
                                    : Colors.grey,
                                content: Text(
                                  textAlign: TextAlign.end,
                                  shoNormalNoti == true
                                      ? 'تم بنجاح '
                                      : 'يجب عليك تفعيل التنبيهات فى اعدادات التطبيق',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          }
                        },
                        BoxConstraints.tightFor(
                          width: s4 ? 60 : 50,
                          height: s4 ? 60 : 50,
                        ),
                        'عالى',
                        s4 ? Colors.yellow : Color(0xFF63b459),
                      ),
                    ),
                  ],
                ),
              )
            ],
          ),
        ],
      ),
    );
  }
}

class AppBarFirstPage extends StatelessWidget implements PreferredSizeWidget {
  @override
  Size get preferredSize => const Size.fromHeight(50);
  @override
  Widget build(BuildContext context) {
    return AppBar(
      elevation: 0.0,
      leading: IconButton(
        onPressed: () {
          Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => SittingPage(),
              ));
        },
        icon: Icon(
          Icons.settings,
          size: 30.0,
          color: Colors.yellow,
        ),
      ),
      backgroundColor: Color(0xFF76d668),
    );
  }
}

class SittingPage extends StatefulWidget {
  @override
  State<SittingPage> createState() => _SittingPageState();
}

class _SittingPageState extends State<SittingPage> {
  bool mode15 = true;
  bool hideNoti = false;
  bool showNoti_MN = true;
  String morningHour = '';
  String morningMinute = '';
  String morningMode = '';
  String nightHour = '';
  String nightMinute = '';
  String nightMode = '';
  void getTime() async {
    final SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      morningHour = prefs.getString('morningHour') ?? '5';
      morningMinute = prefs.getString('morningMinute') ?? '00';
      morningMode = prefs.getString('morningMode') ?? 'ص';

      nightHour = prefs.getString('nightHour') ?? '6';
      nightMinute = prefs.getString('nightMinute') ?? '50';
      nightMode = prefs.getString('nightMode') ?? 'م';
    });
  }

  void getSitting() async {
    final SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      mode15 = prefs.getBool('mode15') ?? true;
      hideNoti = prefs.getBool('hideNoti') ?? false;
      showNoti_MN = prefs.getBool('showNoti_MN') ?? true;
    });
  }

  @override
  void initState() {
    super.initState();
    getSitting();
    getTime();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.grey,
      child: SafeArea(
        child: Scaffold(
          backgroundColor: Color(0xffececec),
          appBar: AppBar(
            elevation: 0.0,
            leading: IconButton(
              onPressed: () {
                Navigator.pop(context);
              },
              icon: Icon(
                Icons.arrow_back,
                size: 30.0,
                color: Colors.white,
              ),
            ),
            actions: [
              Padding(
                padding: EdgeInsets.only(top: 10),
                child: Text(
                  'إعدادات',
                  style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
              IconButton(
                onPressed: () {},
                icon: Icon(Icons.settings_outlined,
                    size: 30.0, color: Colors.white),
              )
            ],
            backgroundColor: Color(0xFF76d668),
          ),
          body: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Container(
                height: 150,
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 25),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Icon(
                        Icons.notification_add_outlined,
                        color: Color(0xffc1c1c1),
                        size: 30,
                      ),
                      Text(
                        'اشعارات الاذكار',
                        style:
                            TextStyle(color: Color(0xffc1c1c1), fontSize: 30),
                      )
                    ],
                  ),
                ),
              ),
              Container(
                height: 85,
                color: Colors.white,
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 25, vertical: 10),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Switch(
                        activeColor: Color(0xFF76d668),
                        inactiveTrackColor: Color(0xffececec),
                        value: mode15,
                        onChanged: (bool value) async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          setState(() {
                            mode15 = value;
                            prefs.setBool('mode15', value);
                            ScaffoldMessenger.of(context).showSnackBar(
                              const SnackBar(
                                duration: Duration(milliseconds: 500),
                                backgroundColor: Color(0xFF76d668),
                                content: Text(
                                  textAlign: TextAlign.end,
                                  'تم بنجاح ',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          });
                        },
                      ),
                      Container(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.end,
                          children: [
                            Text(
                              'الإختفاء التلقائى',
                              style: TextStyle(
                                  color: Color(0xff8f8f8f),
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold),
                            ),
                            Text(
                              'تختفى الأذكار تلقائيا بعد 15 ثانيه',
                              style: TextStyle(
                                  color: Color(0xff828282), fontSize: 16),
                            ),
                          ],
                        ),
                      )
                    ],
                  ),
                ),
              ),
              Divider(
                height: 1,
                color: Colors.grey,
              ),
              Container(
                height: 85,
                color: Colors.white,
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 25, vertical: 10),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Switch(
                        activeColor: Color(0xFF76d668),
                        inactiveTrackColor: Color(0xffececec),
                        value: hideNoti,
                        onChanged: (bool value) async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          setState(() {
                            hideNoti = value;
                            prefs.setBool('shoNormalNoti', !value);
                            prefs.setBool('hideNoti', value);
                            if (value) {
                              Workmanager().cancelAll();
                            } else {
                              int? x = prefs.getInt('notiMinutes');
                              if (x != null) {
                                Workmanager().registerPeriodicTask(
                                  "0$x",
                                  "periodic Notification",
                                  frequency: Duration(minutes: x),
                                );
                              } else {
                                Workmanager().registerPeriodicTask(
                                  "015",
                                  "periodic Notification",
                                  frequency: Duration(minutes: 15),
                                );
                              }
                            }
                            ScaffoldMessenger.of(context).showSnackBar(
                              const SnackBar(
                                duration: Duration(milliseconds: 500),
                                backgroundColor: Color(0xFF76d668),
                                content: Text(
                                  textAlign: TextAlign.end,
                                  'تم بنجاح ',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          });
                        },
                      ),
                      Container(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.end,
                          children: [
                            Text(
                              'إقياف ظهور  الاذكار على الشاشة',
                              style: TextStyle(
                                  color: Color(0xff8f8f8f),
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold),
                            ),
                            Text(
                              hideNoti
                                  ? 'الاشعارات غير مفعله الان'
                                  : 'يمكنك إقاف التطبيق وتشغيله لاحقا ',
                              style: TextStyle(
                                  color:
                                      hideNoti ? Colors.red : Color(0xff828282),
                                  fontSize: 16),
                            ),
                          ],
                        ),
                      )
                    ],
                  ),
                ),
              ),
              Divider(
                height: 1,
                color: Colors.black,
              ),
              //########################
              Container(
                height: 150,
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 25),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Icon(
                        Icons.sunny_snowing,
                        color: Color(0xffc1c1c1),
                        size: 30,
                      ),
                      Text(
                        'أذكار الصباح والمساء',
                        style:
                            TextStyle(color: Color(0xffc1c1c1), fontSize: 30),
                      )
                    ],
                  ),
                ),
              ),
              Container(
                height: 60,
                color: Colors.white,
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 25, vertical: 10),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Switch(
                        activeColor: Color(0xFF76d668),
                        inactiveTrackColor: Color(0xffececec),
                        value: showNoti_MN,
                        onChanged: (bool value) async {
                          final SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          setState(() {
                            showNoti_MN = value;
                            prefs.setBool('showNoti_MN', value);
                            if (value) {
                              String morningHour =
                                  prefs.getString('morningHour') ?? '5';
                              String morningMinute =
                                  prefs.getString('morningMinute') ?? '00';
                              String morningMode =
                                  prefs.getString('morningMode') ?? 'ص';

                              String nightHour =
                                  prefs.getString('nightHour') ?? '6';
                              String nightMinute =
                                  prefs.getString('nightMinute') ?? '50';
                              String nightMode =
                                  prefs.getString('nightMode') ?? 'م';

                              int mh = int.parse(morningHour);
                              mh = mh + (morningMode == 'م' ? 12 : 0);
                              int mm = int.parse(morningMinute);

                              int nh = int.parse(nightHour);
                              nh = nh + (nightMode == 'م' ? 12 : 0);
                              int nm = int.parse(nightMinute);

                              Noti.notificationScheduled(
                                  id: 1,
                                  title: 'حصن المسلم ',
                                  body: 'اذكار الصباح',
                                  time: Time(mh, mm),
                                  payload: 'اذكار الصباح');
                              Noti.notificationScheduled(
                                  id: 2,
                                  title: 'حصن المسلم ',
                                  body: 'اذكار المساء',
                                  time: Time(nh, nm),
                                  payload: 'اذكار المساء');
                            } else {
                              Noti.cancelSpecificNot(1);
                              Noti.cancelSpecificNot(2);
                            }
                            ScaffoldMessenger.of(context).showSnackBar(
                              const SnackBar(
                                duration: Duration(milliseconds: 500),
                                backgroundColor: Color(0xFF76d668),
                                content: Text(
                                  textAlign: TextAlign.end,
                                  'تم بنجاح ',
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 20),
                                ),
                              ),
                            );
                          });
                        },
                      ),
                      Container(
                        child: Text(
                          'تفعيل التنبيهات',
                          style: TextStyle(
                              color: Color(0xff8f8f8f),
                              fontSize: 18,
                              fontWeight: FontWeight.bold),
                        ),
                      )
                    ],
                  ),
                ),
              ),
              Divider(
                height: 1,
                color: Colors.grey,
              ),
              GestureDetector(
                onTap: () async {
                  int mh = int.parse(morningHour);
                  mh = mh + (morningMode == 'م' ? 12 : 0);
                  int mm = int.parse(morningMinute);
                  TimeOfDay? dt = await showTimePicker(
                      context: context,
                      initialTime: TimeOfDay(hour: mh, minute: mm));
                  if (dt != null) {
                    List<String> ls = [];
                    ls = dt.format(context).split(':');
                    String hour = ls[0];
                    List<String> m_mode = ls[1].split(' ');
                    String minute = m_mode[0];
                    String mode = m_mode[1];
                    mode = mode == 'PM' ? 'م' : 'ص';
                    setState(() {
                      morningHour = hour;
                      morningMinute = minute;
                      morningMode = mode;
                    });
                    final SharedPreferences prefs =
                        await SharedPreferences.getInstance();
                    prefs.setString('morningHour', morningHour);
                    prefs.setString('morningMinute', morningMinute);
                    prefs.setString('morningMode', morningMode);

                    int mh1 = int.parse(morningHour);
                    mh1 = mh1 + (morningMode == 'م' ? 12 : 0);
                    int mm1 = int.parse(morningMinute);
                    await FlutterLocalNotificationsPlugin().cancel(1);
                    Noti.notificationScheduled(
                        id: 1,
                        title: 'حصن المسلم ',
                        body: 'اذكار الصباح',
                        time: Time(mh1, mm1),
                        payload: 'اذكار الصباح');

                    // print(ls);
                    // print(m_mode);
                    // print(hour);
                    // print(minute);
                    // print(mode);
                  }
                },
                child: AbsorbPointer(
                  child: Container(
                    height: 60,
                    color: Colors.white,
                    child: Padding(
                      padding:
                          EdgeInsets.symmetric(horizontal: 25, vertical: 10),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text(
                            morningHour +
                                ':' +
                                morningMinute +
                                ' ' +
                                morningMode,
                            style: TextStyle(
                                color: Color(0xFF76d668),
                                fontSize: 18,
                                fontWeight: FontWeight.bold),
                          ),
                          Container(
                            child: Text(
                              'موعد التنبيهات لأذكار الصباح',
                              style: TextStyle(
                                  color: Color(0xff8f8f8f),
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),
              Divider(
                height: 1,
                color: Colors.grey,
              ),
              GestureDetector(
                onTap: () async {
                  int nh = int.parse(nightHour);
                  nh = nh + (nightMode == 'م' ? 12 : 0);
                  int nm = int.parse(nightMinute);
                  TimeOfDay? dt = await showTimePicker(
                      context: context,
                      initialTime: TimeOfDay(hour: nh, minute: nm));
                  if (dt != null) {
                    // print(dt);
                    List<String> ls = [];
                    ls = dt.format(context).split(':');
                    String hour = ls[0];
                    List<String> m_mode = ls[1].split(' ');
                    String minute = m_mode[0];
                    String mode = m_mode[1];
                    mode = mode == 'PM' ? 'م' : 'ص';
                    setState(() {
                      nightHour = hour;
                      nightMinute = minute;
                      nightMode = mode;
                    });

                    final SharedPreferences prefs =
                        await SharedPreferences.getInstance();
                    prefs.setString('nightHour', nightHour);
                    prefs.setString('nightMinute', nightMinute);
                    prefs.setString('nightMode', nightMode);

                    int nh1 = int.parse(nightHour);
                    nh1 = nh1 + (nightMode == 'م' ? 12 : 0);
                    int nm1 = int.parse(nightMinute);
                    await FlutterLocalNotificationsPlugin().cancel(2);
                    Noti.notificationScheduled(
                        id: 2,
                        title: 'حصن المسلم ',
                        body: 'اذكار المساء',
                        time: Time(nh1, nm1),
                        payload: 'اذكار المساء');
                    // print(ls);
                    // print(m_mode);
                    // print(hour);
                    // print(minute);
                    // print(mode);
                  }
                },
                child: AbsorbPointer(
                  child: Container(
                    height: 60,
                    color: Colors.white,
                    child: Padding(
                      padding:
                          EdgeInsets.symmetric(horizontal: 25, vertical: 10),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text(
                            nightHour + ':' + nightMinute + ' ' + nightMode,
                            style: TextStyle(
                                color: Color(0xFF76d668),
                                fontSize: 18,
                                fontWeight: FontWeight.bold),
                          ),
                          Container(
                            child: Text(
                              'موعد التنبيهات لأذكار المساء',
                              style: TextStyle(
                                  color: Color(0xff8f8f8f),
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                ),
              ),

              Divider(
                height: 1,
                color: Colors.black,
              ),
            ],
          ),
        ),
      ),
    );
  }
}
